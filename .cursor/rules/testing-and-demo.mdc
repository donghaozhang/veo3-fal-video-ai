---
description:
globs:
alwaysApply: false
---
# Cost-Conscious Testing and Demo Framework

## ‚ö†Ô∏è CRITICAL: Cost Protection
**See [cost-protection.mdc](mdc:.cursor/rules/cost-protection.mdc) for complete cost protection rules**

**NEVER run video/image/avatar generation tests without explicit user confirmation - they cost real money!**

This document covers the cost-conscious testing and demonstration capabilities for FAL AI video generation, avatar generation, and text-to-image implementations.

## Cost-Conscious Test Suite Overview

### FAL AI Video Generation Tests
Located in [packages/providers/fal/video/test_fal_ai.py](mdc:packages/providers/fal/video/test_fal_ai.py) and [packages/providers/fal/video/test_api_only.py](mdc:packages/providers/fal/video/test_api_only.py)

### FAL AI Avatar Generation Tests (TRIPLE-MODE)
Located in [packages/providers/fal/avatar/](mdc:packages/providers/fal/avatar/) with comprehensive triple-mode test structure:
- **[test_setup.py](mdc:packages/providers/fal/avatar/test_setup.py)** - FREE environment and API validation
- **[test_official_example.py](mdc:packages/providers/fal/avatar/test_official_example.py)** - Test using exact FAL AI documentation examples
- **[test_generation.py](mdc:packages/providers/fal/avatar/test_generation.py)** - PAID avatar generation tests (includes `--voice`, `--audio`, `--multi` flags)

### FAL AI Text-to-Image Tests (CONSOLIDATED)
Located in [packages/providers/fal/text-to-image/](mdc:packages/providers/fal/text-to-image/) with consolidated test structure:
- **[test_setup.py](mdc:packages/providers/fal/text-to-image/test_setup.py)** - FREE environment and API validation
- **[test_generation.py](mdc:packages/providers/fal/text-to-image/test_generation.py)** - PAID image generation tests (includes `--dragon` flag)

### FAL AI Image-to-Image Tests (PROFESSIONAL PACKAGE)
Located in [packages/providers/fal/image-to-image/tests/](mdc:packages/providers/fal/image-to-image/tests/) with professional package test structure:
- **[test_setup.py](mdc:packages/providers/fal/image-to-image/tests/test_setup.py)** - FREE environment and API validation
- **[test_imports.py](mdc:packages/providers/fal/image-to-image/tests/test_imports.py)** - FREE package structure validation
- **[test_enhancement.py](mdc:packages/providers/fal/image-to-image/tests/test_enhancement.py)** - PAID image enhancement tests (includes `--style_transfer`, `--upscale`, `--artistic` flags)

The test suites provide comprehensive validation with cost warnings and confirmation prompts to prevent unexpected charges.

### FREE Test Command Options (No Cost)

#### Video Generation (FAL AI)
```bash
# API connection test only - completely FREE
python test_api_only.py

# Basic setup and API connection test - FREE (no video generation)
python test_fal_ai.py
```

#### Avatar Generation (FAL AI)
```bash
# Environment and API setup test - completely FREE
python test_setup.py

# Basic setup and dependency validation - FREE (no avatar generation)
python test_generation.py
```

#### Text-to-Image Generation (FAL AI)
```bash
# Environment and API setup test - completely FREE
python test_setup.py

# Basic setup and dependency validation - FREE (no image generation)
python test_generation.py
```

#### Image-to-Image Generation (FAL AI)
```bash
# Environment and API setup test - completely FREE
python tests/test_setup.py

# Package structure validation - FREE (no image enhancement)
python -m fal_image_to_image.tests.test_imports
```

### Paid Test Command Options (Generates Real Content)

#### Video Generation (FAL AI)
```bash
# Test single model - ~$0.02-0.05 per test
python test_fal_ai.py --hailuo      # Test Hailuo model only
python test_fal_ai.py --kling       # Test Kling model only
python test_fal_ai.py --quick       # Same as --hailuo

# Full comprehensive test - ~$0.02-0.05
python test_fal_ai.py --full

# Compare both models - ~$0.04-0.10 (EXPENSIVE!)
python test_fal_ai.py --compare     # Generates 2 videos
```

#### Avatar Generation (FAL AI)
```bash
# Official FAL AI example test - ~$0.03-0.05 per test
python test_official_example.py    # Exact documentation example

# Test specific voice - ~$0.03-0.05 per test
python test_generation.py --voice Bill      # Test Bill voice (official example)
python test_generation.py --voice Sarah     # Test Sarah voice
python test_generation.py --voice Roger     # Test Roger voice

# Test audio-to-avatar mode - ~$0.03-0.05 per test
python test_generation.py --audio           # Test custom audio files

# Test multi-audio conversation mode - ~$0.03-0.05 per test
python test_generation.py --multi           # Test two-person conversation

# Quick test with minimal frames (cheaper) - ~$0.025 per test
python test_generation.py --quick

# Compare multiple voices - ~$0.09-0.15 (EXPENSIVE!)
python test_generation.py --compare         # Generates 3+ avatar videos

# Test custom scenarios - ~$0.06-0.10
python test_generation.py --scenarios       # Multiple test scenarios
```

#### Text-to-Image Generation (FAL AI)
```bash
# Test single model - ~$0.015 per test
python test_generation.py --imagen4     # Test Imagen 4 only
python test_generation.py --seedream    # Test Seedream only
python test_generation.py --flux-schnell # Test FLUX Schnell only
python test_generation.py --flux-dev    # Test FLUX Dev only

# Special generation tests
python test_generation.py --dragon      # Generate dragon image (~$0.015)

# Batch testing - cost varies
python test_generation.py --batch 1,3   # Test selected models

# Compare all models - ~$0.060 (EXPENSIVE!)
python test_generation.py --compare     # Generates 4 images
```

#### Image-to-Image Generation (FAL AI)
```bash
# Test single enhancement mode - cost varies by complexity
python tests/test_enhancement.py --style_transfer    # Test style transfer
python tests/test_enhancement.py --upscale          # Test upscaling
python tests/test_enhancement.py --artistic         # Test artistic transformation

# Batch enhancement testing - cost varies by image count and complexity
python tests/test_batch.py --count 3               # Test batch processing

# Full enhancement pipeline test - cost varies
python tests/test_full_pipeline.py                 # Test complete workflow
```

### Cost Safety Features
- **Cost warnings** displayed prominently before any paid operations
- **Confirmation prompts** before generating content
- **Model/mode-specific testing** to avoid testing multiple models/modes accidentally
- **Clear cost estimates** for each operation
- **FREE default behavior** when no flags are specified
- **Official example testing** for documentation compliance (avatar generation)

## FREE Testing Scripts

### Video Generation
Located in [packages/providers/fal/video/test_api_only.py](mdc:packages/providers/fal/video/test_api_only.py)

A completely FREE testing script that validates your setup without generating any videos:

#### Features
- **No video generation** - completely free to run
- **API key validation** without triggering charges
- **Dependencies check** for all required packages
- **Environment validation** for .env configuration
- **Generator initialization** testing

### Avatar Generation
Located in [packages/providers/fal/avatar/test_setup.py](mdc:packages/providers/fal/avatar/test_setup.py)

A completely FREE testing script that validates your avatar generation setup:

#### Features
- **No avatar generation** - completely free to run
- **API key validation** without triggering charges
- **Dependencies check** for all required packages (fal-client, requests, python-dotenv)
- **Environment validation** for .env configuration
- **Generator initialization** testing for all three modes
- **Voice options validation** (20 voices available)

#### Usage
```bash
python test_setup.py
```

#### Output Example
```
üÜì FAL AI Avatar Generation Setup Test - FREE
Tests environment and API connectivity without generating avatars
===============================================================
‚úÖ Dependencies: All required packages installed
‚úÖ Environment: FAL_KEY configured properly
‚úÖ API Connection: Successfully connected to FAL AI
‚úÖ Generator: All three modes (text-to-speech, audio-to-avatar, multi-audio) ready
‚úÖ Voices: All 20 voice options available
üÜì This test was completely FREE - no avatars were generated
```

### Text-to-Image Generation
Located in [fal_text_to_image/test_setup.py](mdc:fal_text_to_image/test_setup.py)

A completely FREE testing script for text-to-image setup validation.

### Image-to-Image Generation
Located in [fal_image_to_image/tests/test_setup.py](mdc:fal_image_to_image/tests/test_setup.py)

A completely FREE testing script that validates your image enhancement setup:

#### Features
- **No image enhancement** - completely free to run
- **API key validation** without triggering charges
- **Dependencies check** for all required packages
- **Environment validation** for .env configuration
- **Professional package structure** validation
- **Enhancement modes testing** (style transfer, upscaling, artistic)

#### Usage
```bash
python tests/test_setup.py
```

#### Output Example
```
üÜì FAL AI Image-to-Image Setup Test - FREE
Tests environment and API connectivity without enhancing images
============================================================
‚úÖ Dependencies: All required packages installed
‚úÖ Environment: FAL_KEY configured properly
‚úÖ API Connection: Successfully connected to FAL AI
‚úÖ Package Structure: Professional package imports working
‚úÖ Enhancement Modes: All enhancement types available
üÜì This test was completely FREE - no images were enhanced
```

## Test Components

### 1. Dependency Testing
- Validates all required imports (fal_client, requests, python-dotenv)
- Checks generator class availability
- Reports missing dependencies with installation instructions

### 2. Environment Testing
- Validates .env file presence
- Checks FAL_KEY format and availability
- Tests endpoint configuration
- Warns about API key format issues

### 3. API Connection Testing
- Authenticates with FAL AI using provided API key
- Tests connection to respective endpoints
- Validates API key permissions and rate limits
- Reports connection status and API key validity

### 4. Model/Mode-Specific Testing

#### Video Generation Models

**Hailuo Model Testing**
```python
# Test parameters used
{
    'prompt': 'A peaceful mountain landscape with gentle movement',
    'image_url': 'https://picsum.photos/512/512',
    'duration': '6',
    'prompt_optimizer': True
}
```

**Kling Model Testing**
```python
# Test parameters used
{
    'prompt': 'A beautiful landscape with moving clouds, cinematic quality',
    'image_url': 'https://picsum.photos/512/512', 
    'duration': '5',
    'cfg_scale': 0.5,
    'negative_prompt': 'blur, distort, and low quality'
}
```

#### Avatar Generation Modes

**Text-to-Speech Mode Testing (Official Example)**
```python
# Official FAL AI example parameters
{
    'image_url': 'https://v3.fal.media/files/panda/HuM21CXMf0q7OO2zbvwhV_c4533aada79a495b90e50e32dc9b83a8.png',
    'text_input': 'Spend more time with people who make you feel alive, and less with things that drain your soul.',
    'voice': 'Bill',
    'prompt': 'An elderly man with a white beard and headphones records audio with a microphone. He appears engaged and expressive, suggesting a podcast or voiceover.',
    'num_frames': 136,
    'seed': 42,
    'turbo': True
}
```

**Audio-to-Avatar Mode Testing**
```python
# Test parameters used
{
    'image_url': 'path/to/test/image.jpg',
    'audio_url': 'path/to/test/audio.mp3',
    'prompt': 'A person speaking naturally with clear lip-sync and natural expressions.',
    'num_frames': 145,
    'turbo': True
}
```

**Multi-Audio Conversation Mode Testing**
```python
# Test parameters used
{
    'image_url': 'path/to/test/image.jpg',
    'first_audio_url': 'path/to/person1_audio.mp3',
    'second_audio_url': 'path/to/person2_audio.mp3',
    'prompt': 'Two people engaged in a natural conversation, speaking in sequence with clear lip-sync and natural expressions.',
    'num_frames': 181,
    'turbo': True
}
```

#### Text-to-Image Model Testing

**Model-Specific Parameters**
```python
# Imagen4 testing
{
    'prompt': 'A beautiful dragon in a magical forest',
    'negative_prompt': 'blur, distortion, artifacts',
    'num_inference_steps': 50
}

# FLUX Schnell testing (fast)
{
    'prompt': 'A quick dragon sketch',
    'num_inference_steps': 4
}
```

### 5. Comparison Testing
- Runs multiple models/modes with identical input parameters
- Measures generation time for each model/mode
- Compares file sizes and output quality
- Provides side-by-side result analysis

## Cost-Conscious Interactive Demos

### Video Generation Demo
Located in [fal_video_generation/demo.py](mdc:fal_video_generation/demo.py)

#### Demo Features
- **Cost Warnings**: Upfront warnings about video generation costs
- **Confirmation Prompts**: User confirmation before each paid operation
- **Model Selection Menu**: Choose between Hailuo, Kling, or comparison modes with cost estimates
- **Online Image Generation**: Use web-hosted images for testing (~$0.02-0.05 per video)
- **Local Image Generation**: Upload and use local image files (~$0.02-0.05 per video)
- **Model Comparison**: Generate videos with both models simultaneously (~$0.04-0.10)
- **Custom Parameters**: Adjust model-specific settings interactively

### Avatar Generation Demo
Located in [fal_avatar_generation/demo.py](mdc:fal_avatar_generation/demo.py)

#### Demo Features
- **Cost Warnings**: Upfront warnings about avatar generation costs
- **Mode Selection Menu**: Choose between Text-to-Speech, Audio-to-Avatar, or Multi-Audio Conversation
- **Voice Selection**: Interactive voice picker with 20 options (Bill highlighted as official example)
- **Official Example Option**: Quick generation using exact FAL AI documentation examples
- **Confirmation Prompts**: User confirmation before each paid operation
- **Custom Parameters**: Adjust frame count, prompts, and generation settings
- **File Support**: Local and remote images/audio files

#### Demo Menu Structure with Cost Indicators
```
üé≠ FAL AI Avatar Generation Demo
üí∞ COST WARNING: Each avatar generation costs ~$0.03-0.05
=============================================
1. Text-to-Speech Avatar (~$0.03-0.05)
   - 20 voice options available
   - Official example: Bill voice recommended
2. Audio-to-Avatar (~$0.03-0.05)
   - Use custom audio files
   - Natural lip-sync animation
3. Multi-Audio Conversation (~$0.03-0.05)
   - Two-person conversations
   - Sequential speaking
4. Official FAL AI Example (~$0.03-0.05)
   - Exact documentation reproduction
5. Exit
```

### Text-to-Image Demo
Located in [fal_text_to_image/demo.py](mdc:fal_text_to_image/demo.py)

#### Demo Features
- **Cost Warnings**: Upfront warnings about image generation costs
- **Model Selection Menu**: Choose between Imagen4, Seedream, FLUX Schnell, FLUX Dev
- **Batch Generation**: Generate with multiple models simultaneously
- **Dragon Generation**: Special dragon image generation option
- **Custom Parameters**: Negative prompts, inference steps, etc.

### Demo Menu Structure with Cost Indicators
```
üé¨ FAL AI Video Generation Demo
üí∞ COST WARNING: Each video generation costs ~$0.02-0.05
==============================
1. Generate from online image (~$0.02-0.05)
2. Generate from local image (~$0.02-0.05)
3. Compare both models (~$0.04-0.10) ‚ö†Ô∏è EXPENSIVE
4. Custom input (~$0.02-0.05)
5. Exit
```

### Cost Safety Features
- **Upfront cost warnings** displayed when demo starts
- **Individual cost estimates** for each demo option
- **Confirmation prompts** before generating any content
- **Expensive operations** clearly marked with warnings
- **User can cancel** any operation before charges occur
- **Official example recommendations** for avatar generation

### Usage Examples

#### Basic Model Testing
```bash
python demo.py
# Select option 1 or 2 for single model testing
# Follow prompts for image URL and description
```

#### Avatar Generation Testing
```bash
python demo.py
# Select option 4 for official example (recommended)
# Or select option 1 for custom text-to-speech
# Follow prompts for image, text, and voice selection
```

#### Model/Mode Comparison
```bash
python demo.py
# Select option 3 for comparison (costs ~2x-4x more)
# Confirm additional costs before proceeding
```

## Official Example Testing (Avatar Generation Only)

### FAL AI Documentation Compliance
Located in [fal_avatar_generation/test_official_example.py](mdc:fal_avatar_generation/test_official_example.py)

#### Purpose
- **Test exact FAL AI documentation examples** to ensure compliance
- **Validate official parameters** work correctly
- **Provide reference implementation** for users
- **Cost**: ~$0.03-0.05 per test (generates one avatar video)

#### Official Example Parameters
```python
{
    'image_url': 'https://v3.fal.media/files/panda/HuM21CXMf0q7OO2zbvwhV_c4533aada79a495b90e50e32dc9b83a8.png',
    'text_input': 'Spend more time with people who make you feel alive, and less with things that drain your soul.',
    'voice': 'Bill',
    'prompt': 'An elderly man with a white beard and headphones records audio with a microphone. He appears engaged and expressive, suggesting a podcast or voiceover.',
    'num_frames': 136,
    'seed': 42,
    'turbo': True
}
```

#### Usage
```bash
python test_official_example.py
# Generates avatar video using exact FAL AI documentation example
# Cost: ~$0.03-0.05
```

## Testing Best Practices

### Cost-Conscious Development Workflow
1. **Always start with FREE tests** (`test_setup.py`, `test_api_only.py`)
2. **Use official examples** for avatar generation when possible
3. **Test single models/modes** before running comparisons
4. **Confirm costs** before running paid tests
5. **Use model-specific flags** to avoid unnecessary generation

### Recommended Testing Sequence

#### For New Setup
```bash
# 1. FREE environment validation
python test_setup.py

# 2. FREE API connection test (video only)
python test_api_only.py

# 3. Official example test (avatar only, PAID)
python test_official_example.py  # With user confirmation

# 4. Single model/mode tests (PAID)
python test_generation.py --voice Bill  # With user confirmation
```

#### For Development
```bash
# Always use FREE tests during development
python test_setup.py

# Only run paid tests when specifically testing generation
# Always with explicit user confirmation
```

### Cost Monitoring
- Track generation costs during development
- Use single model/mode flags to minimize costs
- Avoid comparison tests during development
- Document all cost implications in test functions
